Grammar

    0 $accept: Program $end

    1 Program: Decl
    2        | Program Decl

    3 Decl: VariableDecl
    4     | FunctionDecl
    5     | ClassDecl
    6     | InterfaceDecl

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id

    9 Type: _int
   10     | _double
   11     | _boolean
   12     | _string
   13     | Type _leftbracket _rightbracket
   14     | _id

   15 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock
   16             | _void _id _leftparen Formals _rightparen StmtBlock

   17 Formals: VarList
   18        | %empty

   19 VarList: Variable _comma VarList
   20        | Variable

   21 ClassDecl: _class _id Extension Implementation _leftbrace OptionalField _rightbrace

   22 Extension: %empty
   23          | _extends _id

   24 Implementation: %empty
   25               | _implements IDList

   26 IDList: _id _comma IDList
   27       | _id

   28 OptionalField: %empty
   29              | OptionalField Field

   30 Field: VariableDecl
   31      | FunctionDecl

   32 InterfaceDecl: _interface _id _leftbrace Prototypes _rightbrace

   33 Prototypes: %empty
   34           | Prototypes Prototype

   35 Prototype: Type _id _leftparen Formals _rightparen _semicolon
   36          | _void _id _leftparen Formals _rightparen _semicolon

   37 StmtBlock: _leftbrace StmtVarDecl StmtBlockStmt _rightbrace

   38 StmtVarDecl: %empty
   39            | StmtVarDecl VariableDecl

   40 StmtBlockStmt: %empty
   41              | StmtBlockStmt Stmt

   42 Stmt: _semicolon
   43     | Expr _semicolon
   44     | IfStmt
   45     | WhileStmt
   46     | ForStmt
   47     | BreakStmt
   48     | ReturnStmt
   49     | PrintStmt
   50     | StmtBlock

   51 OptionalExpr: %empty
   52             | Expr

   53 IfStmt: _if _leftparen Expr _rightparen Stmt
   54       | _if _leftparen Expr _rightparen Stmt _else Stmt

   55 WhileStmt: _while _leftparen Expr _rightparen Stmt

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen Stmt

   57 BreakStmt: _break _semicolon

   58 ReturnStmt: _return OptionalExpr _semicolon

   59 PrintStmt: _println _leftparen ExprList _rightparen _semicolon

   60 ExprList: Expr
   61         | Expr _comma ExprList

   62 Expr: Lvalue _assignop Expr
   63     | Constant
   64     | Lvalue
   65     | Call
   66     | _leftparen Expr _rightparen
   67     | Expr _add Expr
   68     | Expr _sub Expr
   69     | Expr _mult Expr
   70     | Expr _div Expr
   71     | Expr _mod Expr
   72     | _sub Expr
   73     | Expr _less Expr
   74     | Expr _lessequal Expr
   75     | Expr _greater Expr
   76     | Expr _greaterequal Expr
   77     | Expr _equal Expr
   78     | Expr _notequal Expr
   79     | Expr _and Expr
   80     | Expr _or Expr
   81     | _not Expr
   82     | _readln _leftparen _rightparen
   83     | _newarray _leftparen _intconstant _comma Type _rightparen

   84 Lvalue: _id
   85       | Lvalue _leftbracket Expr _rightbracket
   86       | Lvalue _period _id

   87 Call: _id _leftparen Actuals _rightparen
   88     | _id _period _id _leftparen Actuals _rightparen

   89 Actuals: %empty
   90        | ExprList

   91 Constant: _intconstant
   92         | _doubleconstant
   93         | _stringconstant
   94         | _booleanconstant


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 11
_break (259) 57
_class (260) 21
_double (261) 10
_else (262) 54
_extends (263) 23
_for (264) 56
_if (265) 53 54
_implements (266) 25
_int (267) 9
_interface (268) 32
_newarray (269) 83
_println (270) 59
_readln (271) 82
_return (272) 58
_string (273) 12
_void (274) 16 36
_while (275) 55
_add (276) 67
_sub (277) 68 72
_mult (278) 69
_div (279) 70
_mod (280) 71
_lessequal (281) 74
_greaterequal (282) 76
_notequal (283) 78
_less (284) 73
_greater (285) 75
_equal (286) 77
_and (287) 79
_or (288) 80
_not (289) 81
_assignop (290) 62
_semicolon (291) 7 35 36 42 43 56 57 58 59
_comma (292) 19 26 61 83
_period (293) 86 88
_leftparen (294) 15 16 35 36 53 54 55 56 59 66 82 83 87 88
_rightparen (295) 15 16 35 36 53 54 55 56 59 66 82 83 87 88
_leftbracket (296) 13 85
_rightbracket (297) 13 85
_leftbrace (298) 21 32 37
_rightbrace (299) 21 32 37
_intconstant (300) 83 91
_doubleconstant (301) 92
_stringconstant (302) 93
_booleanconstant (303) 94
_id (304) 8 14 15 16 21 23 26 27 32 35 36 84 86 87 88
"then" (305)
"emptyStmt" (306)
"uminus" (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
Program (54)
    on left: 1 2, on right: 0 2
Decl (55)
    on left: 3 4 5 6, on right: 1 2
VariableDecl (56)
    on left: 7, on right: 3 30 39
Variable (57)
    on left: 8, on right: 7 19 20
Type (58)
    on left: 9 10 11 12 13 14, on right: 8 13 15 35 83
FunctionDecl (59)
    on left: 15 16, on right: 4 31
Formals (60)
    on left: 17 18, on right: 15 16 35 36
VarList (61)
    on left: 19 20, on right: 17 19
ClassDecl (62)
    on left: 21, on right: 5
Extension (63)
    on left: 22 23, on right: 21
Implementation (64)
    on left: 24 25, on right: 21
IDList (65)
    on left: 26 27, on right: 25 26
OptionalField (66)
    on left: 28 29, on right: 21 29
Field (67)
    on left: 30 31, on right: 29
InterfaceDecl (68)
    on left: 32, on right: 6
Prototypes (69)
    on left: 33 34, on right: 32 34
Prototype (70)
    on left: 35 36, on right: 34
StmtBlock (71)
    on left: 37, on right: 15 16 50
StmtVarDecl (72)
    on left: 38 39, on right: 37 39
StmtBlockStmt (73)
    on left: 40 41, on right: 37 41
Stmt (74)
    on left: 42 43 44 45 46 47 48 49 50, on right: 41 53 54 55 56
OptionalExpr (75)
    on left: 51 52, on right: 56 58
IfStmt (76)
    on left: 53 54, on right: 44
WhileStmt (77)
    on left: 55, on right: 45
ForStmt (78)
    on left: 56, on right: 46
BreakStmt (79)
    on left: 57, on right: 47
ReturnStmt (80)
    on left: 58, on right: 48
PrintStmt (81)
    on left: 59, on right: 49
ExprList (82)
    on left: 60 61, on right: 59 61 90
Expr (83)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81 82 83, on right: 43 52 53 54 55 56 60 61 62 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 80 81 85
Lvalue (84)
    on left: 84 85 86, on right: 62 64 85 86
Call (85)
    on left: 87 88, on right: 65
Actuals (86)
    on left: 89 90, on right: 87 88
Constant (87)
    on left: 91 92 93 94, on right: 63


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Program        go to state 9
    Decl           go to state 10
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 1

   11 Type: _boolean .

    $default  reduce using rule 11 (Type)


State 2

   21 ClassDecl: _class . _id Extension Implementation _leftbrace OptionalField _rightbrace

    _id  shift, and go to state 17


State 3

   10 Type: _double .

    $default  reduce using rule 10 (Type)


State 4

    9 Type: _int .

    $default  reduce using rule 9 (Type)


State 5

   32 InterfaceDecl: _interface . _id _leftbrace Prototypes _rightbrace

    _id  shift, and go to state 18


State 6

   12 Type: _string .

    $default  reduce using rule 12 (Type)


State 7

   16 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock

    _id  shift, and go to state 19


State 8

   14 Type: _id .

    $default  reduce using rule 14 (Type)


State 9

    0 $accept: Program . $end
    2 Program: Program . Decl

    $end        shift, and go to state 20
    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Decl           go to state 21
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 10

    1 Program: Decl .

    $default  reduce using rule 1 (Program)


State 11

    3 Decl: VariableDecl .

    $default  reduce using rule 3 (Decl)


State 12

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 22


State 13

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket
   15 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 23
    _id           shift, and go to state 24


State 14

    4 Decl: FunctionDecl .

    $default  reduce using rule 4 (Decl)


State 15

    5 Decl: ClassDecl .

    $default  reduce using rule 5 (Decl)


State 16

    6 Decl: InterfaceDecl .

    $default  reduce using rule 6 (Decl)


State 17

   21 ClassDecl: _class _id . Extension Implementation _leftbrace OptionalField _rightbrace

    _extends  shift, and go to state 25

    $default  reduce using rule 22 (Extension)

    Extension  go to state 26


State 18

   32 InterfaceDecl: _interface _id . _leftbrace Prototypes _rightbrace

    _leftbrace  shift, and go to state 27


State 19

   16 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 28


State 20

    0 $accept: Program $end .

    $default  accept


State 21

    2 Program: Program Decl .

    $default  reduce using rule 2 (Program)


State 22

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 23

   13 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 29


State 24

    8 Variable: Type _id .
   15 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 30

    $default  reduce using rule 8 (Variable)


State 25

   23 Extension: _extends . _id

    _id  shift, and go to state 31


State 26

   21 ClassDecl: _class _id Extension . Implementation _leftbrace OptionalField _rightbrace

    _implements  shift, and go to state 32

    $default  reduce using rule 24 (Implementation)

    Implementation  go to state 33


State 27

   32 InterfaceDecl: _interface _id _leftbrace . Prototypes _rightbrace

    $default  reduce using rule 33 (Prototypes)

    Prototypes  go to state 34


State 28

   16 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 18 (Formals)

    Variable  go to state 35
    Type      go to state 36
    Formals   go to state 37
    VarList   go to state 38


State 29

   13 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 13 (Type)


State 30

   15 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 18 (Formals)

    Variable  go to state 35
    Type      go to state 36
    Formals   go to state 39
    VarList   go to state 38


State 31

   23 Extension: _extends _id .

    $default  reduce using rule 23 (Extension)


State 32

   25 Implementation: _implements . IDList

    _id  shift, and go to state 40

    IDList  go to state 41


State 33

   21 ClassDecl: _class _id Extension Implementation . _leftbrace OptionalField _rightbrace

    _leftbrace  shift, and go to state 42


State 34

   32 InterfaceDecl: _interface _id _leftbrace Prototypes . _rightbrace
   34 Prototypes: Prototypes . Prototype

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 4
    _string      shift, and go to state 6
    _void        shift, and go to state 43
    _rightbrace  shift, and go to state 44
    _id          shift, and go to state 8

    Type       go to state 45
    Prototype  go to state 46


State 35

   19 VarList: Variable . _comma VarList
   20        | Variable .

    _comma  shift, and go to state 47

    $default  reduce using rule 20 (VarList)


State 36

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 23
    _id           shift, and go to state 48


State 37

   16 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 49


State 38

   17 Formals: VarList .

    $default  reduce using rule 17 (Formals)


State 39

   15 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 50


State 40

   26 IDList: _id . _comma IDList
   27       | _id .

    _comma  shift, and go to state 51

    $default  reduce using rule 27 (IDList)


State 41

   25 Implementation: _implements IDList .

    $default  reduce using rule 25 (Implementation)


State 42

   21 ClassDecl: _class _id Extension Implementation _leftbrace . OptionalField _rightbrace

    $default  reduce using rule 28 (OptionalField)

    OptionalField  go to state 52


State 43

   36 Prototype: _void . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 53


State 44

   32 InterfaceDecl: _interface _id _leftbrace Prototypes _rightbrace .

    $default  reduce using rule 32 (InterfaceDecl)


State 45

   13 Type: Type . _leftbracket _rightbracket
   35 Prototype: Type . _id _leftparen Formals _rightparen _semicolon

    _leftbracket  shift, and go to state 23
    _id           shift, and go to state 54


State 46

   34 Prototypes: Prototypes Prototype .

    $default  reduce using rule 34 (Prototypes)


State 47

   19 VarList: Variable _comma . VarList

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Variable  go to state 35
    Type      go to state 36
    VarList   go to state 55


State 48

    8 Variable: Type _id .

    $default  reduce using rule 8 (Variable)


State 49

   16 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 56

    StmtBlock  go to state 57


State 50

   15 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 56

    StmtBlock  go to state 58


State 51

   26 IDList: _id _comma . IDList

    _id  shift, and go to state 40

    IDList  go to state 59


State 52

   21 ClassDecl: _class _id Extension Implementation _leftbrace OptionalField . _rightbrace
   29 OptionalField: OptionalField . Field

    _boolean     shift, and go to state 1
    _double      shift, and go to state 3
    _int         shift, and go to state 4
    _string      shift, and go to state 6
    _void        shift, and go to state 7
    _rightbrace  shift, and go to state 60
    _id          shift, and go to state 8

    VariableDecl  go to state 61
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 62
    Field         go to state 63


State 53

   36 Prototype: _void _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 64


State 54

   35 Prototype: Type _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 65


State 55

   19 VarList: Variable _comma VarList .

    $default  reduce using rule 19 (VarList)


State 56

   37 StmtBlock: _leftbrace . StmtVarDecl StmtBlockStmt _rightbrace

    $default  reduce using rule 38 (StmtVarDecl)

    StmtVarDecl  go to state 66


State 57

   16 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 16 (FunctionDecl)


State 58

   15 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 15 (FunctionDecl)


State 59

   26 IDList: _id _comma IDList .

    $default  reduce using rule 26 (IDList)


State 60

   21 ClassDecl: _class _id Extension Implementation _leftbrace OptionalField _rightbrace .

    $default  reduce using rule 21 (ClassDecl)


State 61

   30 Field: VariableDecl .

    $default  reduce using rule 30 (Field)


State 62

   31 Field: FunctionDecl .

    $default  reduce using rule 31 (Field)


State 63

   29 OptionalField: OptionalField Field .

    $default  reduce using rule 29 (OptionalField)


State 64

   36 Prototype: _void _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 18 (Formals)

    Variable  go to state 35
    Type      go to state 36
    Formals   go to state 67
    VarList   go to state 38


State 65

   35 Prototype: Type _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 18 (Formals)

    Variable  go to state 35
    Type      go to state 36
    Formals   go to state 68
    VarList   go to state 38


State 66

   37 StmtBlock: _leftbrace StmtVarDecl . StmtBlockStmt _rightbrace
   39 StmtVarDecl: StmtVarDecl . VariableDecl

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6

    $default  reduce using rule 40 (StmtBlockStmt)

    VariableDecl   go to state 69
    Variable       go to state 12
    Type           go to state 36
    StmtBlockStmt  go to state 70


State 67

   36 Prototype: _void _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 71


State 68

   35 Prototype: Type _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 72


State 69

   39 StmtVarDecl: StmtVarDecl VariableDecl .

    $default  reduce using rule 39 (StmtVarDecl)


State 70

   37 StmtBlock: _leftbrace StmtVarDecl StmtBlockStmt . _rightbrace
   41 StmtBlockStmt: StmtBlockStmt . Stmt

    _break            shift, and go to state 73
    _for              shift, and go to state 74
    _if               shift, and go to state 75
    _newarray         shift, and go to state 76
    _println          shift, and go to state 77
    _readln           shift, and go to state 78
    _return           shift, and go to state 79
    _while            shift, and go to state 80
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _semicolon        shift, and go to state 83
    _leftparen        shift, and go to state 84
    _leftbrace        shift, and go to state 56
    _rightbrace       shift, and go to state 85
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    StmtBlock   go to state 91
    Stmt        go to state 92
    IfStmt      go to state 93
    WhileStmt   go to state 94
    ForStmt     go to state 95
    BreakStmt   go to state 96
    ReturnStmt  go to state 97
    PrintStmt   go to state 98
    Expr        go to state 99
    Lvalue      go to state 100
    Call        go to state 101
    Constant    go to state 102


State 71

   36 Prototype: _void _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 103


State 72

   35 Prototype: Type _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 104


State 73

   57 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 105


State 74

   56 ForStmt: _for . _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen Stmt

    _leftparen  shift, and go to state 106


State 75

   53 IfStmt: _if . _leftparen Expr _rightparen Stmt
   54       | _if . _leftparen Expr _rightparen Stmt _else Stmt

    _leftparen  shift, and go to state 107


State 76

   83 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 108


State 77

   59 PrintStmt: _println . _leftparen ExprList _rightparen _semicolon

    _leftparen  shift, and go to state 109


State 78

   82 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 110


State 79

   58 ReturnStmt: _return . OptionalExpr _semicolon

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    $default  reduce using rule 51 (OptionalExpr)

    OptionalExpr  go to state 111
    Expr          go to state 112
    Lvalue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 80

   55 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 113


State 81

   72 Expr: _sub . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 114
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 82

   81 Expr: _not . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 115
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 83

   42 Stmt: _semicolon .

    $default  reduce using rule 42 (Stmt)


State 84

   66 Expr: _leftparen . Expr _rightparen

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 116
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 85

   37 StmtBlock: _leftbrace StmtVarDecl StmtBlockStmt _rightbrace .

    $default  reduce using rule 37 (StmtBlock)


State 86

   91 Constant: _intconstant .

    $default  reduce using rule 91 (Constant)


State 87

   92 Constant: _doubleconstant .

    $default  reduce using rule 92 (Constant)


State 88

   93 Constant: _stringconstant .

    $default  reduce using rule 93 (Constant)


State 89

   94 Constant: _booleanconstant .

    $default  reduce using rule 94 (Constant)


State 90

   84 Lvalue: _id .
   87 Call: _id . _leftparen Actuals _rightparen
   88     | _id . _period _id _leftparen Actuals _rightparen

    _period     shift, and go to state 117
    _leftparen  shift, and go to state 118

    $default  reduce using rule 84 (Lvalue)


State 91

   50 Stmt: StmtBlock .

    $default  reduce using rule 50 (Stmt)


State 92

   41 StmtBlockStmt: StmtBlockStmt Stmt .

    $default  reduce using rule 41 (StmtBlockStmt)


State 93

   44 Stmt: IfStmt .

    $default  reduce using rule 44 (Stmt)


State 94

   45 Stmt: WhileStmt .

    $default  reduce using rule 45 (Stmt)


State 95

   46 Stmt: ForStmt .

    $default  reduce using rule 46 (Stmt)


State 96

   47 Stmt: BreakStmt .

    $default  reduce using rule 47 (Stmt)


State 97

   48 Stmt: ReturnStmt .

    $default  reduce using rule 48 (Stmt)


State 98

   49 Stmt: PrintStmt .

    $default  reduce using rule 49 (Stmt)


State 99

   43 Stmt: Expr . _semicolon
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _semicolon     shift, and go to state 132


State 100

   62 Expr: Lvalue . _assignop Expr
   64     | Lvalue .
   85 Lvalue: Lvalue . _leftbracket Expr _rightbracket
   86       | Lvalue . _period _id

    _assignop     shift, and go to state 133
    _period       shift, and go to state 134
    _leftbracket  shift, and go to state 135

    $default  reduce using rule 64 (Expr)


State 101

   65 Expr: Call .

    $default  reduce using rule 65 (Expr)


State 102

   63 Expr: Constant .

    $default  reduce using rule 63 (Expr)


State 103

   36 Prototype: _void _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 36 (Prototype)


State 104

   35 Prototype: Type _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 35 (Prototype)


State 105

   57 BreakStmt: _break _semicolon .

    $default  reduce using rule 57 (BreakStmt)


State 106

   56 ForStmt: _for _leftparen . OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen Stmt

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    $default  reduce using rule 51 (OptionalExpr)

    OptionalExpr  go to state 136
    Expr          go to state 112
    Lvalue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 107

   53 IfStmt: _if _leftparen . Expr _rightparen Stmt
   54       | _if _leftparen . Expr _rightparen Stmt _else Stmt

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 137
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 108

   83 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 138


State 109

   59 PrintStmt: _println _leftparen . ExprList _rightparen _semicolon

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    ExprList  go to state 139
    Expr      go to state 140
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 110

   82 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 141


State 111

   58 ReturnStmt: _return OptionalExpr . _semicolon

    _semicolon  shift, and go to state 142


State 112

   52 OptionalExpr: Expr .
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131

    $default  reduce using rule 52 (OptionalExpr)


State 113

   55 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 143
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 114

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   72     | _sub Expr .
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    $default  reduce using rule 72 (Expr)


State 115

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr
   81     | _not Expr .

    $default  reduce using rule 81 (Expr)


State 116

   66 Expr: _leftparen Expr . _rightparen
   67     | Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _rightparen    shift, and go to state 144


State 117

   88 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 145


State 118

   87 Call: _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    $default  reduce using rule 89 (Actuals)

    ExprList  go to state 146
    Expr      go to state 140
    Lvalue    go to state 100
    Call      go to state 101
    Actuals   go to state 147
    Constant  go to state 102


State 119

   67 Expr: Expr _add . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 148
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 120

   68 Expr: Expr _sub . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 149
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 121

   69 Expr: Expr _mult . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 150
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 122

   70 Expr: Expr _div . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 151
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 123

   71 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 152
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 124

   74 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 153
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 125

   76 Expr: Expr _greaterequal . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 154
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 126

   78 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 155
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 127

   73 Expr: Expr _less . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 156
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 128

   75 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 157
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 129

   77 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 158
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 130

   79 Expr: Expr _and . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 159
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 131

   80 Expr: Expr _or . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 160
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 132

   43 Stmt: Expr _semicolon .

    $default  reduce using rule 43 (Stmt)


State 133

   62 Expr: Lvalue _assignop . Expr

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 161
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 134

   86 Lvalue: Lvalue _period . _id

    _id  shift, and go to state 162


State 135

   85 Lvalue: Lvalue _leftbracket . Expr _rightbracket

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 163
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 136

   56 ForStmt: _for _leftparen OptionalExpr . _semicolon Expr _semicolon OptionalExpr _rightparen Stmt

    _semicolon  shift, and go to state 164


State 137

   53 IfStmt: _if _leftparen Expr . _rightparen Stmt
   54       | _if _leftparen Expr . _rightparen Stmt _else Stmt
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _rightparen    shift, and go to state 165


State 138

   83 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 166


State 139

   59 PrintStmt: _println _leftparen ExprList . _rightparen _semicolon

    _rightparen  shift, and go to state 167


State 140

   60 ExprList: Expr .
   61         | Expr . _comma ExprList
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _comma         shift, and go to state 168

    $default  reduce using rule 60 (ExprList)


State 141

   82 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 82 (Expr)


State 142

   58 ReturnStmt: _return OptionalExpr _semicolon .

    $default  reduce using rule 58 (ReturnStmt)


State 143

   55 WhileStmt: _while _leftparen Expr . _rightparen Stmt
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _rightparen    shift, and go to state 169


State 144

   66 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 66 (Expr)


State 145

   88 Call: _id _period _id . _leftparen Actuals _rightparen

    _leftparen  shift, and go to state 170


State 146

   90 Actuals: ExprList .

    $default  reduce using rule 90 (Actuals)


State 147

   87 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 171


State 148

   67 Expr: Expr . _add Expr
   67     | Expr _add Expr .
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    $default  reduce using rule 67 (Expr)


State 149

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   68     | Expr _sub Expr .
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    $default  reduce using rule 68 (Expr)


State 150

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   69     | Expr _mult Expr .
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    $default  reduce using rule 69 (Expr)


State 151

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   70     | Expr _div Expr .
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    $default  reduce using rule 70 (Expr)


State 152

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   71     | Expr _mod Expr .
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    $default  reduce using rule 71 (Expr)


State 153

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   74     | Expr _lessequal Expr .
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add   shift, and go to state 119
    _sub   shift, and go to state 120
    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    _lessequal     error (nonassociative)
    _greaterequal  error (nonassociative)
    _less          error (nonassociative)
    _greater       error (nonassociative)

    $default  reduce using rule 74 (Expr)


State 154

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   76     | Expr _greaterequal Expr .
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add   shift, and go to state 119
    _sub   shift, and go to state 120
    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    _lessequal     error (nonassociative)
    _greaterequal  error (nonassociative)
    _less          error (nonassociative)
    _greater       error (nonassociative)

    $default  reduce using rule 76 (Expr)


State 155

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   78     | Expr _notequal Expr .
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _less          shift, and go to state 127
    _greater       shift, and go to state 128

    _notequal  error (nonassociative)
    _equal     error (nonassociative)

    $default  reduce using rule 78 (Expr)


State 156

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   73     | Expr _less Expr .
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add   shift, and go to state 119
    _sub   shift, and go to state 120
    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    _lessequal     error (nonassociative)
    _greaterequal  error (nonassociative)
    _less          error (nonassociative)
    _greater       error (nonassociative)

    $default  reduce using rule 73 (Expr)


State 157

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   75     | Expr _greater Expr .
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add   shift, and go to state 119
    _sub   shift, and go to state 120
    _mult  shift, and go to state 121
    _div   shift, and go to state 122
    _mod   shift, and go to state 123

    _lessequal     error (nonassociative)
    _greaterequal  error (nonassociative)
    _less          error (nonassociative)
    _greater       error (nonassociative)

    $default  reduce using rule 75 (Expr)


State 158

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   77     | Expr _equal Expr .
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _less          shift, and go to state 127
    _greater       shift, and go to state 128

    _notequal  error (nonassociative)
    _equal     error (nonassociative)

    $default  reduce using rule 77 (Expr)


State 159

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   79     | Expr _and Expr .
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129

    $default  reduce using rule 79 (Expr)


State 160

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr
   80     | Expr _or Expr .

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130

    $default  reduce using rule 80 (Expr)


State 161

   62 Expr: Lvalue _assignop Expr .
   67     | Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131

    $default  reduce using rule 62 (Expr)


State 162

   86 Lvalue: Lvalue _period _id .

    $default  reduce using rule 86 (Lvalue)


State 163

   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr
   85 Lvalue: Lvalue _leftbracket Expr . _rightbracket

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _rightbracket  shift, and go to state 172


State 164

   56 ForStmt: _for _leftparen OptionalExpr _semicolon . Expr _semicolon OptionalExpr _rightparen Stmt

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    Expr      go to state 173
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 165

   53 IfStmt: _if _leftparen Expr _rightparen . Stmt
   54       | _if _leftparen Expr _rightparen . Stmt _else Stmt

    _break            shift, and go to state 73
    _for              shift, and go to state 74
    _if               shift, and go to state 75
    _newarray         shift, and go to state 76
    _println          shift, and go to state 77
    _readln           shift, and go to state 78
    _return           shift, and go to state 79
    _while            shift, and go to state 80
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _semicolon        shift, and go to state 83
    _leftparen        shift, and go to state 84
    _leftbrace        shift, and go to state 56
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    StmtBlock   go to state 91
    Stmt        go to state 174
    IfStmt      go to state 93
    WhileStmt   go to state 94
    ForStmt     go to state 95
    BreakStmt   go to state 96
    ReturnStmt  go to state 97
    PrintStmt   go to state 98
    Expr        go to state 99
    Lvalue      go to state 100
    Call        go to state 101
    Constant    go to state 102


State 166

   83 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Type  go to state 175


State 167

   59 PrintStmt: _println _leftparen ExprList _rightparen . _semicolon

    _semicolon  shift, and go to state 176


State 168

   61 ExprList: Expr _comma . ExprList

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    ExprList  go to state 177
    Expr      go to state 140
    Lvalue    go to state 100
    Call      go to state 101
    Constant  go to state 102


State 169

   55 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 73
    _for              shift, and go to state 74
    _if               shift, and go to state 75
    _newarray         shift, and go to state 76
    _println          shift, and go to state 77
    _readln           shift, and go to state 78
    _return           shift, and go to state 79
    _while            shift, and go to state 80
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _semicolon        shift, and go to state 83
    _leftparen        shift, and go to state 84
    _leftbrace        shift, and go to state 56
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    StmtBlock   go to state 91
    Stmt        go to state 178
    IfStmt      go to state 93
    WhileStmt   go to state 94
    ForStmt     go to state 95
    BreakStmt   go to state 96
    ReturnStmt  go to state 97
    PrintStmt   go to state 98
    Expr        go to state 99
    Lvalue      go to state 100
    Call        go to state 101
    Constant    go to state 102


State 170

   88 Call: _id _period _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    $default  reduce using rule 89 (Actuals)

    ExprList  go to state 146
    Expr      go to state 140
    Lvalue    go to state 100
    Call      go to state 101
    Actuals   go to state 179
    Constant  go to state 102


State 171

   87 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 87 (Call)


State 172

   85 Lvalue: Lvalue _leftbracket Expr _rightbracket .

    $default  reduce using rule 85 (Lvalue)


State 173

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr . _semicolon OptionalExpr _rightparen Stmt
   67 Expr: Expr . _add Expr
   68     | Expr . _sub Expr
   69     | Expr . _mult Expr
   70     | Expr . _div Expr
   71     | Expr . _mod Expr
   73     | Expr . _less Expr
   74     | Expr . _lessequal Expr
   75     | Expr . _greater Expr
   76     | Expr . _greaterequal Expr
   77     | Expr . _equal Expr
   78     | Expr . _notequal Expr
   79     | Expr . _and Expr
   80     | Expr . _or Expr

    _add           shift, and go to state 119
    _sub           shift, and go to state 120
    _mult          shift, and go to state 121
    _div           shift, and go to state 122
    _mod           shift, and go to state 123
    _lessequal     shift, and go to state 124
    _greaterequal  shift, and go to state 125
    _notequal      shift, and go to state 126
    _less          shift, and go to state 127
    _greater       shift, and go to state 128
    _equal         shift, and go to state 129
    _and           shift, and go to state 130
    _or            shift, and go to state 131
    _semicolon     shift, and go to state 180


State 174

   53 IfStmt: _if _leftparen Expr _rightparen Stmt .
   54       | _if _leftparen Expr _rightparen Stmt . _else Stmt

    _else  shift, and go to state 181

    $default  reduce using rule 53 (IfStmt)


State 175

   13 Type: Type . _leftbracket _rightbracket
   83 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 182
    _leftbracket  shift, and go to state 23


State 176

   59 PrintStmt: _println _leftparen ExprList _rightparen _semicolon .

    $default  reduce using rule 59 (PrintStmt)


State 177

   61 ExprList: Expr _comma ExprList .

    $default  reduce using rule 61 (ExprList)


State 178

   55 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 55 (WhileStmt)


State 179

   88 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 183


State 180

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr _semicolon . OptionalExpr _rightparen Stmt

    _newarray         shift, and go to state 76
    _readln           shift, and go to state 78
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _leftparen        shift, and go to state 84
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    $default  reduce using rule 51 (OptionalExpr)

    OptionalExpr  go to state 184
    Expr          go to state 112
    Lvalue        go to state 100
    Call          go to state 101
    Constant      go to state 102


State 181

   54 IfStmt: _if _leftparen Expr _rightparen Stmt _else . Stmt

    _break            shift, and go to state 73
    _for              shift, and go to state 74
    _if               shift, and go to state 75
    _newarray         shift, and go to state 76
    _println          shift, and go to state 77
    _readln           shift, and go to state 78
    _return           shift, and go to state 79
    _while            shift, and go to state 80
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _semicolon        shift, and go to state 83
    _leftparen        shift, and go to state 84
    _leftbrace        shift, and go to state 56
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    StmtBlock   go to state 91
    Stmt        go to state 185
    IfStmt      go to state 93
    WhileStmt   go to state 94
    ForStmt     go to state 95
    BreakStmt   go to state 96
    ReturnStmt  go to state 97
    PrintStmt   go to state 98
    Expr        go to state 99
    Lvalue      go to state 100
    Call        go to state 101
    Constant    go to state 102


State 182

   83 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 83 (Expr)


State 183

   88 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 88 (Call)


State 184

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr . _rightparen Stmt

    _rightparen  shift, and go to state 186


State 185

   54 IfStmt: _if _leftparen Expr _rightparen Stmt _else Stmt .

    $default  reduce using rule 54 (IfStmt)


State 186

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen . Stmt

    _break            shift, and go to state 73
    _for              shift, and go to state 74
    _if               shift, and go to state 75
    _newarray         shift, and go to state 76
    _println          shift, and go to state 77
    _readln           shift, and go to state 78
    _return           shift, and go to state 79
    _while            shift, and go to state 80
    _sub              shift, and go to state 81
    _not              shift, and go to state 82
    _semicolon        shift, and go to state 83
    _leftparen        shift, and go to state 84
    _leftbrace        shift, and go to state 56
    _intconstant      shift, and go to state 86
    _doubleconstant   shift, and go to state 87
    _stringconstant   shift, and go to state 88
    _booleanconstant  shift, and go to state 89
    _id               shift, and go to state 90

    StmtBlock   go to state 91
    Stmt        go to state 187
    IfStmt      go to state 93
    WhileStmt   go to state 94
    ForStmt     go to state 95
    BreakStmt   go to state 96
    ReturnStmt  go to state 97
    PrintStmt   go to state 98
    Expr        go to state 99
    Lvalue      go to state 100
    Call        go to state 101
    Constant    go to state 102


State 187

   56 ForStmt: _for _leftparen OptionalExpr _semicolon Expr _semicolon OptionalExpr _rightparen Stmt .

    $default  reduce using rule 56 (ForStmt)
